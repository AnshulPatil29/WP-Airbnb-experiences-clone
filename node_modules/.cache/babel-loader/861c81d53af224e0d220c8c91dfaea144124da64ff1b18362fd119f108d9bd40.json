{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\Programming\\\\wp_project\\\\wp-airbnb\\\\src\\\\components\\\\CardList.js\",\n  _s = $RefreshSig$();\nimport cardData from '../data/card_data.json';\nimport Card from './Card';\nimport './CardList.css';\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\nimport { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardList() {\n  _s();\n  const cardListRef = useRef(null);\n  const [cardWidth, setCardWidth] = useState(0);\n  useEffect(() => {\n    if (cardListRef.current) {\n      const firstCard = cardListRef.current.querySelector('.card-container');\n      if (firstCard) {\n        setCardWidth(firstCard.offsetWidth + 16); // Add any gap size if applicable\n      }\n    }\n  }, []);\n  const scrollLeft = () => {\n    const currentScrollLeft = cardListRef.current.scrollLeft;\n\n    // If we're near the start, scroll normally\n    if (currentScrollLeft <= cardWidth) {\n      cardListRef.current.scrollBy({\n        left: -cardWidth,\n        behavior: 'smooth'\n      });\n    } else {\n      // Ensure the leftmost card is fully visible\n      const newScrollLeft = Math.floor((currentScrollLeft - cardWidth) / cardWidth) * cardWidth;\n      cardListRef.current.scrollTo({\n        left: newScrollLeft,\n        behavior: 'smooth'\n      });\n    }\n  };\n  const scrollRight = () => {\n    const currentScrollLeft = cardListRef.current.scrollLeft;\n    const maxScrollLeft = cardListRef.current.scrollWidth - cardListRef.current.clientWidth;\n\n    // If we're near the end, adjust so that the last card aligns perfectly on the right\n    if (currentScrollLeft + cardWidth >= maxScrollLeft) {\n      cardListRef.current.scrollTo({\n        left: maxScrollLeft,\n        behavior: 'smooth'\n      });\n    } else {\n      // Scroll by one card width\n      const newScrollLeft = Math.ceil((currentScrollLeft + cardWidth) / cardWidth) * cardWidth;\n      cardListRef.current.scrollTo({\n        left: newScrollLeft,\n        behavior: 'smooth'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scroll-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"scroll-button\",\n        onClick: scrollLeft,\n        children: /*#__PURE__*/_jsxDEV(FaChevronLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"scroll-button\",\n        onClick: scrollRight,\n        children: /*#__PURE__*/_jsxDEV(FaChevronRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-list\",\n      ref: cardListRef,\n      children: cardData.map((item, index) => /*#__PURE__*/_jsxDEV(Card, {\n        imageUrl: item.image_url,\n        rating: item.rating,\n        reviews: item.reviews,\n        time: item.time,\n        title: item.title,\n        price: item.price\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(CardList, \"80lcLfTKhFDnLf2H4THPu9Bo2v0=\");\n_c = CardList;\nvar _c;\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"names":["cardData","Card","FaChevronLeft","FaChevronRight","useRef","useEffect","useState","jsxDEV","_jsxDEV","CardList","_s","cardListRef","cardWidth","setCardWidth","current","firstCard","querySelector","offsetWidth","scrollLeft","currentScrollLeft","scrollBy","left","behavior","newScrollLeft","Math","floor","scrollTo","scrollRight","maxScrollLeft","scrollWidth","clientWidth","ceil","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","item","index","imageUrl","image_url","rating","reviews","time","title","price","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/Programming/wp_project/wp-airbnb/src/components/CardList.js"],"sourcesContent":["import cardData from '../data/card_data.json';\r\nimport Card from './Card';\r\nimport './CardList.css';\r\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\r\nimport { useRef, useEffect, useState } from 'react';\r\n\r\nexport default function CardList() {\r\n    const cardListRef = useRef(null);\r\n    const [cardWidth, setCardWidth] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (cardListRef.current) {\r\n            const firstCard = cardListRef.current.querySelector('.card-container');\r\n            if (firstCard) {\r\n                setCardWidth(firstCard.offsetWidth + 16); // Add any gap size if applicable\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const scrollLeft = () => {\r\n        const currentScrollLeft = cardListRef.current.scrollLeft;\r\n        \r\n        // If we're near the start, scroll normally\r\n        if (currentScrollLeft <= cardWidth) {\r\n            cardListRef.current.scrollBy({ left: -cardWidth, behavior: 'smooth' });\r\n        } else {\r\n            // Ensure the leftmost card is fully visible\r\n            const newScrollLeft = Math.floor((currentScrollLeft - cardWidth) / cardWidth) * cardWidth;\r\n            cardListRef.current.scrollTo({ left: newScrollLeft, behavior: 'smooth' });\r\n        }\r\n    };\r\n\r\n    const scrollRight = () => {\r\n        const currentScrollLeft = cardListRef.current.scrollLeft;\r\n        const maxScrollLeft = cardListRef.current.scrollWidth - cardListRef.current.clientWidth;\r\n\r\n        // If we're near the end, adjust so that the last card aligns perfectly on the right\r\n        if (currentScrollLeft + cardWidth >= maxScrollLeft) {\r\n            cardListRef.current.scrollTo({ left: maxScrollLeft, behavior: 'smooth' });\r\n        } else {\r\n            // Scroll by one card width\r\n            const newScrollLeft = Math.ceil((currentScrollLeft + cardWidth) / cardWidth) * cardWidth;\r\n            cardListRef.current.scrollTo({ left: newScrollLeft, behavior: 'smooth' });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"card-list-container\">\r\n            <div className=\"scroll-buttons\">\r\n                <button className=\"scroll-button\" onClick={scrollLeft}>\r\n                    <FaChevronLeft />\r\n                </button>\r\n                <button className=\"scroll-button\" onClick={scrollRight}>\r\n                    <FaChevronRight />\r\n                </button>\r\n            </div>\r\n            <div className=\"card-list\" ref={cardListRef}>\r\n                {cardData.map((item, index) => (\r\n                    <Card \r\n                        key={index}\r\n                        imageUrl={item.image_url}\r\n                        rating={item.rating}\r\n                        reviews={item.reviews}\r\n                        time={item.time}\r\n                        title={item.title}\r\n                        price={item.price}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}