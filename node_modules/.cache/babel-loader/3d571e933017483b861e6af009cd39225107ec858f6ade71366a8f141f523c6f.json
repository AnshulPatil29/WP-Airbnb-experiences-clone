{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\Programming\\\\wp_project\\\\wp-airbnb\\\\src\\\\components\\\\CardList.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport Card from './Card';\nimport './CardList.css';\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardList() {\n  _s();\n  const cardListRef = useRef(null);\n  const [cardWidth, setCardWidth] = useState(0);\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    // Fetch data from the backend API instead of the JSON file\n    fetch('http://localhost:5000/api/cards').then(response => response.json()).then(data => setCards(data)).catch(error => console.error('Error fetching card data:', error));\n  }, []);\n  useEffect(() => {\n    if (cardListRef.current) {\n      const firstCard = cardListRef.current.querySelector('.card-container');\n      if (firstCard) {\n        setCardWidth(firstCard.offsetWidth + 16);\n      }\n    }\n  }, [cards]);\n  const scrollLeft = () => {\n    const currentScrollLeft = cardListRef.current.scrollLeft;\n    if (currentScrollLeft <= cardWidth) {\n      cardListRef.current.scrollBy({\n        left: -cardWidth,\n        behavior: 'smooth'\n      });\n    } else {\n      const newScrollLeft = Math.floor((currentScrollLeft - cardWidth) / cardWidth) * cardWidth;\n      cardListRef.current.scrollTo({\n        left: newScrollLeft,\n        behavior: 'smooth'\n      });\n    }\n  };\n  const scrollRight = () => {\n    const currentScrollLeft = cardListRef.current.scrollLeft;\n    const maxScrollLeft = cardListRef.current.scrollWidth - cardListRef.current.clientWidth;\n    if (currentScrollLeft + cardWidth >= maxScrollLeft) {\n      cardListRef.current.scrollTo({\n        left: maxScrollLeft,\n        behavior: 'smooth'\n      });\n    } else {\n      const newScrollLeft = Math.ceil((currentScrollLeft + cardWidth) / cardWidth) * cardWidth;\n      cardListRef.current.scrollTo({\n        left: newScrollLeft,\n        behavior: 'smooth'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scroll-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"scroll-button\",\n        onClick: scrollLeft,\n        children: /*#__PURE__*/_jsxDEV(FaChevronLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"scroll-button\",\n        onClick: scrollRight,\n        children: /*#__PURE__*/_jsxDEV(FaChevronRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-list\",\n      ref: cardListRef,\n      children: cards.map(item => /*#__PURE__*/_jsxDEV(Card, {\n        id: item.id,\n        imageUrl: item.image_url1 // Assuming image_url1 is the main image\n        ,\n        rating: item.rating,\n        reviews: item.review_count,\n        time: item.time,\n        title: item.title,\n        price: item.price\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(CardList, \"X0tTn6o167aWFObevP6B0yW5M8I=\");\n_c = CardList;\nvar _c;\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Card","FaChevronLeft","FaChevronRight","jsxDEV","_jsxDEV","CardList","_s","cardListRef","cardWidth","setCardWidth","cards","setCards","fetch","then","response","json","data","catch","error","console","current","firstCard","querySelector","offsetWidth","scrollLeft","currentScrollLeft","scrollBy","left","behavior","newScrollLeft","Math","floor","scrollTo","scrollRight","maxScrollLeft","scrollWidth","clientWidth","ceil","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","item","id","imageUrl","image_url1","rating","reviews","review_count","time","title","price","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/Programming/wp_project/wp-airbnb/src/components/CardList.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport Card from './Card';\r\nimport './CardList.css';\r\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\r\n\r\nexport default function CardList() {\r\n    const cardListRef = useRef(null);\r\n    const [cardWidth, setCardWidth] = useState(0);\r\n    const [cards, setCards] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Fetch data from the backend API instead of the JSON file\r\n        fetch('http://localhost:5000/api/cards')\r\n            .then(response => response.json())\r\n            .then(data => setCards(data))\r\n            .catch(error => console.error('Error fetching card data:', error));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (cardListRef.current) {\r\n            const firstCard = cardListRef.current.querySelector('.card-container');\r\n            if (firstCard) {\r\n                setCardWidth(firstCard.offsetWidth + 16); \r\n            }\r\n        }\r\n    }, [cards]);\r\n\r\n    const scrollLeft = () => {\r\n        const currentScrollLeft = cardListRef.current.scrollLeft;\r\n        if (currentScrollLeft <= cardWidth) {\r\n            cardListRef.current.scrollBy({ left: -cardWidth, behavior: 'smooth' });\r\n        } else {\r\n            const newScrollLeft = Math.floor((currentScrollLeft - cardWidth) / cardWidth) * cardWidth;\r\n            cardListRef.current.scrollTo({ left: newScrollLeft, behavior: 'smooth' });\r\n        }\r\n    };\r\n\r\n    const scrollRight = () => {\r\n        const currentScrollLeft = cardListRef.current.scrollLeft;\r\n        const maxScrollLeft = cardListRef.current.scrollWidth - cardListRef.current.clientWidth;\r\n        if (currentScrollLeft + cardWidth >= maxScrollLeft) {\r\n            cardListRef.current.scrollTo({ left: maxScrollLeft, behavior: 'smooth' });\r\n        } else {\r\n            const newScrollLeft = Math.ceil((currentScrollLeft + cardWidth) / cardWidth) * cardWidth;\r\n            cardListRef.current.scrollTo({ left: newScrollLeft, behavior: 'smooth' });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"card-list-container\">\r\n            <div className=\"scroll-buttons\">\r\n                <button className=\"scroll-button\" onClick={scrollLeft}>\r\n                    <FaChevronLeft />\r\n                </button>\r\n                <button className=\"scroll-button\" onClick={scrollRight}>\r\n                    <FaChevronRight />\r\n                </button>\r\n            </div>\r\n            <div className=\"card-list\" ref={cardListRef}>\r\n                {cards.map((item) => (\r\n                    <Card \r\n                        key={item.id}\r\n                        id={item.id}\r\n                        imageUrl={item.image_url1}  // Assuming image_url1 is the main image\r\n                        rating={item.rating}\r\n                        reviews={item.review_count}\r\n                        time={item.time}\r\n                        title={item.title}\r\n                        price={item.price}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}